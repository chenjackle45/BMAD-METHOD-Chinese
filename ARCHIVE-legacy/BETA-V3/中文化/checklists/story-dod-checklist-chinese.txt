# Story Definition of Done (DoD) Checklist

## 開發代理人指引：
在將 story 標記為「Review」前，請逐項檢查本清單，並回報每項狀態（如 [x] 已完成、[ ] 未完成、[N/A] 不適用），必要時簡要說明。

## 檢查項目：

1.  **需求達成：**
    - [ ] 已實作 story 中所有功能需求。
    - [ ] 已滿足 story 中所有驗收標準。

2.  **程式碼標準與專案結構：**
    - [ ] 所有新增／修改程式碼皆嚴格遵循 `docs/coding-standards.md`。
    - [ ] 所有新增／修改程式碼皆符合 `docs/project-structure.md`（檔案位置、命名等）。
    - [ ] 實作內容符合 `docs/architecture.md` 相關章節（如 story 影響架構）。
    - [ ] 若 story 新增或修改技術，需遵循 `docs/tech-stack.md`（技術／版本）。
    - [ ] 若 story 涉及 API 或資料模型變更，需遵循 `docs/api-reference.md` 與 `docs/data-models.md`。
    - [ ] 新增／修改程式碼已採用基本安全最佳實踐（如輸入驗證、正確錯誤處理、無硬編碼密碼）。
    - [ ] 未新增新的 linter 錯誤或警告。
    - [ ] 必要處有良好註解（釐清複雜邏輯，非明顯內容）。
    
3.  **測試：**
    - [ ] 依 story 與 `docs/testing-strategy.md`，已實作所有必要單元測試。
    - [ ] 依 story 與 `docs/testing-strategy.md`，已實作所有必要整合測試（如適用）。
    - [ ] 所有測試（單元、整合、E2E 如適用）皆通過。
    - [ ] 測試覆蓋率達到專案標準（如有定義）。

4.  **功能與驗證：**
    - [ ] 開發者已手動驗證功能（如本地執行、檢查 UI、測試 API）。
    - [ ] 已考慮並妥善處理邊界情境與潛在錯誤。

5.  **Story 管理：**
    - [ ] story 檔案內所有任務皆標記為完成。
    - [ ] 開發過程中任何釐清或決策皆記錄於 story 檔或適當連結。
    - [ ] story wrap up 區塊已補充變更紀錄、主要開發代理人、對下個 story 或專案整體有關之說明。

6.  **相依、建置與設定：**
    - [ ] 專案可成功建置且無錯誤。
    - [ ] 專案 lint 檢查通過。
    - [ ] 新增相依必須於 story 需求中預先核准，或於開發過程中經用戶明確核准（並記錄於 story 檔）。
    - [ ] 若有新增相依，已於專案相應檔案（如 `package.json`、`requirements.txt`）記錄，並說明理由。
    - [ ] 新增且已核准的相依不得引入已知安全漏洞。
    - [ ] 若 story 新增環境變數或設定，需於 `docs/environment-vars.md` 或 story 備註中記錄，並妥善處理安全性。

7.  **文件（如適用）：**
    - [ ] 新增公開 API 或複雜邏輯皆有完整程式碼註解（如 JSDoc、TSDoc、Python docstring）。
    - [ ] 若影響用戶，已更新用戶文件。
    - [ ] 若有重大架構變更，已更新技術文件（如 README、系統圖）。

## 最終確認：
- [ ] 我，開發代理人，確認上述所有適用項目皆已處理。